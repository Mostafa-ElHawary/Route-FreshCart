import{h as m}from"./chunk-FYGAENKV.js";import{a as n}from"./chunk-RQSOTOV7.js";import{u as p}from"./chunk-EI5NMXFY.js";import{T as c,Z as l}from"./chunk-U6TSNRMP.js";var i=class extends Error{};i.prototype.name="InvalidTokenError";function f(r){return decodeURIComponent(atob(r).replace(/(.)/g,(t,a)=>{let e=a.charCodeAt(0).toString(16).toUpperCase();return e.length<2&&(e="0"+e),"%"+e}))}function h(r){let t=r.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return f(t)}catch{return atob(t)}}function u(r,t){if(typeof r!="string")throw new i("Invalid token specified: must be a string");t||(t={});let a=t.header===!0?0:1,e=r.split(".")[a];if(typeof e!="string")throw new i(`Invalid token specified: missing part #${a+1}`);let o;try{o=h(e)}catch(s){throw new i(`Invalid token specified: invalid base64 for part #${a+1} (${s.message})`)}try{return JSON.parse(o)}catch(s){throw new i(`Invalid token specified: invalid json for part #${a+1} (${s.message})`)}}var $=(()=>{let t=class t{constructor(){this._HttpClient=l(p),this._Router=l(m),this.UserData=null}setRegisterForm(e){return this._HttpClient.post(`${n.baseUrl}/api/v1/auth/signup`,e)}emailValidator(){return e=>{let o=e.value;if(!o)return null;if(!/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(o))return{email:"Invalid email format"};let d=o.split("@")[1].toLowerCase();return["yahoo.com","hotmail.com","gmail.com","nastyx.com"].includes(d)?null:{emailDomain:"Only Yahoo, Hotmail, and Gmail domains are allowed"}}}setLoginForm(e){return this._HttpClient.post(`${n.baseUrl}/api/v1/auth/signin`,e)}saveUserData(){localStorage.getItem("userToken")!==null&&(this.UserData=u(localStorage.getItem("userToken")),console.log(this.UserData))}signUp(){localStorage.removeItem("userToken"),this.UserData=null,this._Router.navigate(["/login"])}setEmailVerification(e){return this._HttpClient.post(`${n.baseUrl}/api/v1/auth/forgotPasswords`,e)}setCodeVerification(e){return this._HttpClient.post(`${n.baseUrl}/api/v1/auth/verifyResetCode`,e)}setResetPassword(e){return this._HttpClient.put(`${n.baseUrl}/api/v1/auth/resetPassword`,e)}};t.\u0275fac=function(o){return new(o||t)},t.\u0275prov=c({token:t,factory:t.\u0275fac,providedIn:"root"});let r=t;return r})();export{$ as a};
